// 当我们进去MySQL之后第一件事是去选择对应的库 选择对应的库之后可以去查看当前的库里边都有哪些表 
// 在MySQL的一个库里边如何去查看哪些表/查看当前数据库中都有哪些表
//      show tables; 同样以表格的形式给你展现出来的  (Tables_in_test)这个是表头
//
//
// 如何去创建一张数据库的表: create table 表名(字段 字段的类型)     但是与创建数据库不同的一点是什么 我们的一个数据库仅仅是为了存放表的 
//     而表创建的时候你要知道你这个表是几行几列的 那么一个表去创建之初表是几行是无法固定的 因为你要插入几条记录是无法固定的 
//     但是几列是可以固定的 为什么?? 因为你去想象一下你对应的一张表  我们的表头是可以定下来的 也就是都有哪些字段是可以定下来的 
//     但是下面都有哪些行是无法确定的 在你创建一张表之初你必须确定下来的是我这张表都有哪些字段 create table aa(字段 字段的类型)
//     字段比如有学号 在数据库中你每一个字段是 有不同的类型的 什么的类型?? 数字类型(1 2..) 字符串类型(一句话) 时间类型(创建对应的时间)
//     这个表不需要都记住 常用记住就行 这张表规定的都是数字类型的格式 在MySQL数据库里你的关键字大写小写无所谓  
//     TINYINT 大小1字节: 当你用这种类型去创建这个字段的时候内存为它分配的空间 当然分配的空间越小它能存储的信息越小 
//     分配的空间越大它存储的信息越大 如果你把一个字段设置成TINYINT一个整数类型 它的取值范围就是(-128, 127) 注意小整数 因为它去的范围比较小
//     一般我们在使用的过程中 INT完全足够了 它可以满足我们日常生活中大多数99%以上的一些需求 当你项目整个需求量更大的时候你可以使用对应的BIGINI
//     取值范围更大了  整数你用INT 小数你用DOUBLE  这是字符串类型 当我想存数字以外的东西 比如我说我想存一句话 'hello'  
//     这个时候我们要用到的就是字符串类型 CHAR VARCHAR这是我们比较常用的 在比较常用之中这个VARCHAR这个是最常用的 
//     定长和变长的区别在于内存为你整个的字段分配空间大小变还是不变 比如我用CHAR的类型我在插入数据的时候不到255的字节它内存中占的空间也是255 
//     但是我用VARCHAR的时候 我在插入数据的时候不到255的字节 它以你实际插入数据的长度为准 这个是CHAR和VARCHAR 
//     下面比较常用的是TEXT和LONGTEXT 当你存储的文本长度比较大 也就是说我存入一个文章的时候 这个时候你的长数据文本就需要用到这两个东西了
//     一个是TEXT一个是LONGTEXT 再往后是时间类型 它有几个对应的东西 第一个是DATE 它格式是年月日 
//     也就是说你如果以DATE形式在数据库里边存储它的格式永远是年月日 没有时分秒   这个比较常用的是DATE TIMESAMP DATETIME 
//     根据不同的需求你去使用不同的类型
// 
//
// 任何去创建一个表 
//     create table 表名(字段名称 字段类型, 字段名称 字段类型.....)   如果你有多个字段名称和字段类型 那么注意逗号分隔 
//     你一定要注意在我们使用任何的数据库里边它的标点符号都是英文标点符号不是中文标点符号 后面拿省略号显示代表一共有多个
//     比如我们现在想创建一个学生表 学号 姓名..这都是列 也就是对应的字段 我要知道都有哪些字段 下面有多少行我肯定不清楚
//     我们的SQL语句当你没写分号的时候你是可以进行换行的 你敲回车是出中划线 代表你的SQL语句并没有结束 你可以继续去写
//     mysql> create table student(
//         -> num int(6),
//         -> name varchar(10),
//         -> sex varchar(2),
//         -> age int,
//         -> schooldate date);      
//
//
// int类型当你去写的时候你可以不去规划它的大小 在我们去设置每个类型的时候 你可以规定int类型最多长度为几位 比如长度为6位 你name的长度不可以为10 
//     注意在这里边 你的int长度可以不去规定 默认长度为11 VARCHAR长度必须规定 如果不规定会报错 创建表成功了 我可以做其他事情
//     比如我可不可以查看一下表中的数据呢 查看表中的语句以后会讲   因为查询是最麻烦的 我要查看表中的所有数据: select * from student;
//     select * from 表名;   select是关键字 from也是关键字 student是表的名称 Empty: 空的   也就是我这张什么都没有的 
//     现在我去表中查询数据是查不出任何东西的 我不光可以查询对应的数据 这张表别人建的 我想对这张表进行操作 那操作之前我需要了解一下 
//     这张表的结构是什么 因为是别人的建的 我并不清楚这张表的结构是什么的 如何查看一个表的结构  什么叫结构 也就是说它都有哪些字段 
//     它的这些字段都是哪些类型的 这就是一个表的结构 如何去查看一个表的结构呢 desc是一个单词的缩写      desc student;
//     结果同样是表格的形式   Field代表你这张表都有哪些字段 Type: 代表你这张表里这一些字段都是哪些类型的  date这种日期长度是没有格式的 
//     只有我们的数据类型和我们字符串类型 我们日期类型是没有任何长度的    Null YES   空 是否可以为空 
//     也就是说当我往这张表插数据的时候我这个字段可不可以不插入 Key: 我们讲到今后约数的时候   Default: 默认我什么都不插入的话 它默认就是空  
//     desc 表名; 这个时候我对表的操作可以去查看一个表的结构 比如我这张表创建错了 现在我创建的东西是number num... 现在我少了一个东西 
//     我想创建一个学生 学生对应的表 比如这边我随随便便要找个东西 我加入一个double类型的字段 那这个时候我这张表创建错了 我想把它删了重新创建怎么办呢 
//     删除表和输出数据库也是一样的     drop table student;
// show tables;      创建一张表 创建这张表有这样的区别 比如创建一本书的表  里面有 书号 书名 发行日期 价格 
//     create table book(num int, name varchar(10), date1 date, price double(5,2));    不要和我的关键字重复上
//     一般你在设置对应价格我们可能会有一系列的操作过程 什么样的过程 我要设置这个价格是小数点后几位 也就是说我要有对应的规定 你设置长度的时候
//     可以设置两个长度  比如一个5一个2 什么意思 一共整个价格的长度为5 小数点后占两位 整数占三位 整数的位置是5.2 后面是小数占的位置
//     回车我们同样创建了一张表      desc book;   我们可以看到对应的数据类型
//     数据类型中的double 同样float也是一样的 长度控制可以是两个长度 一个是总长度 一个小数点后的长度