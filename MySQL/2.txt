// 在不同的数据库里边它每个用户下格式是不一样的 比如oracle数据库它只要输入对应的用户名密码 我可以直接对表进行操作 但在mysql里有些不同的地方
//     Mysql数据库同一个用户下存在多个库 这里边的库就是我们对应的数据仓库 一个用户下存在多个数据仓库 那么我们在使用MySQL的时候首先登录数据库
//     登录完成之后选择要操作的数据仓库 对我们这个用户的数据库下进行选择操作 在我们选择之前如果我们登录的是一个陌生的数据库 
//     那么我们选择之前我们要做的是 我们想查看都有哪些数据库 或者说我们去对应的新的数据库进行操作的时候 我可能需要自己创建一个数据库	
//     或者但我们操作很多一段时间之后我们发现一个数据库是没有用 我们可以进行一个删除一个数据库 
//
//
// 任何操作都是通过sql语句操作的或者MySQL指令  sql语句有对应的格式 每个sql语句以分号结尾 这里边的sql语句和MySQL指令都可以理解成一个汉译英
//     大概你以后学的任何数据库的操作都跟汉译英比较类似 把我们的汉语译成英文
//
//
// 查看数据库: show databases;    showbases都是我数据库里的关键字(有特殊含义的单词) 它在MySQL会起到特殊的作用   
//        它会展示我们MySQL数据库的内容 这个整个的结果也是以表格形式给你展示的 上面第一行(表头/database/数据库) 下面当前用户下的数据库名称
//        他也是以表格的形式展示的 只不过只有一列
//  
// 创建数据库: create database 数据库名称(名称由你自己起名);  
//     你去创建一个数据库的时候得给数据库起名 为什么查询数据库的时候数据库都是有名称的 那你创建的时候后面也要跟上数据库的名称       
//     名称起什么都可以   Query OK: 整个的执行成功了 后面对应的是你执行的时间  如果当你进行操作的时候 我前面的语句已经打过
//     我还想进行再次执行的时候 你可以摁方向键的上和下去把以前执行过的sql语句或者是MySQL指令去进行翻页查出来
// 
// 删除数据库: drop database 数据库名称;
//  
// 进入某个库中进行操作(我要选择要操作的数据库): use 数据库名称 今后我们学的所有的sql语句里面唯独这句话不用加分号
//     因为是它是MySQL自己的并不是sql语句 Database changed: 你已经进入到对应里边的数据库里边了
//
// 当前名称的数据库已经存在  创建数据库失败:    
//
// 有些提示语句比较模糊 需要我们通过经验去查看出错在那 经验就是当你错的次数多了 你知道它在哪里了 有些语句的提示比较清晰的 
//     show database  我们去查看数据库的时候 因为数据库在同一个用户下存在多个库 所以我们要用浮数 比如说现在打错了 就是show database;
//     这个时候你会发现有一个提示语句  在我们看来就是有些模糊不清了 前面1064是你提示的错误码 它不同的错误码对应不同的错误 
//     如果说你的这个错误我查不出在哪 你可以去百度一下MySQL的错误码 一般百度都会有错误的原因 当然这个原因是多个 需要你一一进行排除
//     几乎所以的MySQL语句出错的时候 前面都一样的这是一句废话 对于我们来说没有任何作用 它是让你去做对应的检查 这个sql哪出错了 
//     有用的地方在哪(near database... )  这个时候你可以去做一些更改  今后的MySQL语句越来越长的时候 这个near你去查找是非常非常费劲 
//     这个时候要求你出现错误不要害怕 一点一点去找 错误的出现过程就是你经验的积累过程 你一定不要惧怕对应的错误 
//     use test1; 错误的语句比较清晰      drop test1; 
//