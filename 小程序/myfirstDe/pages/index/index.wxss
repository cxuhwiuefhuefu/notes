page{
  background-color: #00b26a;
}

.container{
  display: flex;
  flex-direction: column; /* flex-direction默认情况下是row */
  align-items: center;
  margin-top: 10px;  
  background-color: #00b26a;
}

.avatar{
  /* width: 80px; */
  /* height: 80px; */
  border-radius: 50%;
  width: 160rpx;
  height: 160rpx;
}

.name{
  color: #666;
  /* font-size: 14px; */
  /* margin-top: 30px; */
  font-size: 28rpx;
  margin-top: 60rpx;
}
.welcome{
  /* border: 1px solid #000; */
  /* padding: 10px 20px; */
  /* margin-top: 100px; */
   border: 2rpx solid #000;  
   padding: 20rpx 40rpx;
   margin-top: 200rpx;      
}


.ceshi-container{
  width: 300rpx;
  height: 300rpx;
  background-color: red;
}
.ceshi-hov  {
  background-color: blue;
}
.box{
  width: 75rpx;
  height: 75rpx;
  background-color: yellow;
}
.box-hov{
  background-color: green;
}

/*

  flex布局
  
  注意: 设为flex布局以后 子元素的float丶clear和vertical-align属性将失效
  水平的主轴和垂直的交叉轴  
  
  容器的属性
      flex-direction属性决定主轴的方向(即项目的排列方向)
          row(默认值): 主轴为水平方向 起点在左端
          row-reverse: 主轴为水平方向 起点在右端
          column: 主轴为垂直方向 起点在上沿
          column-reverse: 主轴为垂直方向 起点在下沿
      flex-wrap 默认情况下 项目都排在一条线(又称"轴线")上 flex-wrap属性定义 如果一条轴排不下 如何换行
          nowrap(默认): 不换行
          wrap: 换行 第一行在上方
          wrap-reverse: 换行 第一行在下方
      flex-flow 是flex-direction和flex-wrap属性的简写形式 默认值为row nowrap
      justify-content属性定义了项目在主轴上的对齐方式 它可能取5个值 具体对齐方式与轴的方向有关 下面假设主轴从左到右
          flex-start(默认值): 左对齐
          flex-end: 右对齐
          center: 居中
          space-between: 两端对齐 项目之间的间隔都相等
          space-around: 每个项目两侧的间隔相等 所以 项目之间的间隔比项目与边框的间隔大一倍
      flex-items属性定义项目在交叉轴上如何对齐 它可能取5个值 具体的对齐方式与交叉轴的方向有关 下面假设交叉轴从上到下
          flex-start: 交叉轴的起点对齐
          flex-end: 交叉轴的终点对齐
          center: 交叉轴的中点对齐
          baseline: 项目的第一行文字的基线对齐
          stretch(默认值): 如果项目为设置高度或设为auto 将沾满整个容器的高度
      align-content属性定义了了多根轴线的对齐方式 加色项目只有一根轴线 该属性不起作用
          flex-start: 与交叉轴的起点对齐
          felx-end: 与交叉轴的终点对齐
          center: 与交叉轴的中点对齐
          space-between: 与交叉轴两端对齐 轴线之间的间隔平均发布
          space-around: 每根轴线两侧的间隔都相等 所以 轴线之间的间隔比轴线与边框的间隔大一倍
          stretch: 轴线沾满整个交叉轴 
        
      项目的属性
          order属性定义项目的排列顺序 数值越小 排列越靠前 默认为0 
          flex-grow属性定义项目的放大比例 默认为0 即如果存在剩余空间 也不放大 
          flex-shrink属性定义了项目的缩小比例 默认为1 即如果空间不足 该项目将缩小  负值对该属性无效
          flex-basis属性定义了在分配多余空间之前 项目占据的主轴空间 浏览器根据这个属性 计算主轴是否有多余空间 它的默认值为auto 即项目的本来大小 
                        它可以设为跟width或height属性一样的值 即项目将占据固定空间
          flex属性是flex-grow flex-shrink和flex-basis的简写 默认值为0 1 auto 后两个属性可选
          align-self属性允许单个项目有与其他项目不一样的对齐方式  可覆盖align-items属性 默认值为auto 表示继承父元素的align-items属性 
                        如果没有父元素 则等同于stretch
                        auto flex-start flex-end start baseline stretch                  



*/